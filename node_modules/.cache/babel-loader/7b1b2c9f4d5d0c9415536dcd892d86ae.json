{"ast":null,"code":"import _defineProperty from \"F:\\\\restaurantmanagement\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"F:\\\\restaurantmanagement\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"F:\\\\restaurantmanagement\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\restaurantmanagement\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\restaurantmanagement\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\restaurantmanagement\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\restaurantmanagement\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"F:\\\\restaurantmanagement\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"F:\\\\restaurantmanagement\\\\src\\\\report.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport Axios from 'axios';\n\nvar Report =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Report, _Component);\n\n  function Report(props) {\n    var _this;\n\n    _classCallCheck(this, Report);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Report).call(this, props));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.bindddlData = _this.bindddlData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.downloadReports = _this.downloadReports.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      PredictedData: {\n        id: '',\n        predictedValue: ''\n      },\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(Report, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.bindddlData();\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(e) {\n      var name = e.target.name;\n      var value = e.target.value;\n      this.setState({\n        PredictedData: _objectSpread({}, this.state.PredictedData, _defineProperty({}, name, value))\n      });\n    }\n  }, {\n    key: \"bindddlData\",\n    value: function bindddlData() {\n      var _this2 = this;\n\n      Axios({\n        method: \"get\",\n        url: 'http://localhost:8088/getData',\n        responseType: 'json'\n      }).then(function (responce) {\n        console.log(responce);\n\n        _this2.setState({\n          data: responce.data\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      this.insertPredictedValue(this.state.PredictedData);\n    }\n  }, {\n    key: \"downloadReports\",\n    value: function downloadReports() {\n      Axios({\n        method: \"post\",\n        url: 'http://localhost:8088/createReport',\n        responseType: 'blob'\n      }).then(function (a) {\n        // const url = window.URL.createObjectURL(new Blob([a]));\n        // const link = document.createElement('a');\n        // link.href = url;\n        // link.setAttribute('download',\"Reports.pdf\");\n        // document.body.appendChild(link);\n        // link.click();\n        // alert(\"pdf is downloaded\");\n        var url = window.URL.createObjectURL(new Blob([a]));\n        var link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', \"Reports.pdf\");\n        document.body.appendChild(link);\n        link.click();\n      });\n    }\n  }, {\n    key: \"insertPredictedValue\",\n    value: function insertPredictedValue(data) {\n      var _this3 = this;\n\n      Axios({\n        method: \"post\",\n        url: 'http://localhost:8088/insertPredictedValue',\n        data: data,\n        responseType: 'json'\n      }).then(function (x) {\n        console.log(x);\n\n        _this3.props.history.push('/');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var ddlValue = this.state.data.map(function (element) {\n        return React.createElement(\"option\", {\n          value: element.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, element.name);\n      });\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Orders\"), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"This is Report Page\"), React.createElement(\"select\", {\n        name: \"id\",\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, ddlValue), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter Predicted Value\",\n        name: \"predictedValue\",\n        onChange: this.onChange,\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        name: \"submitPredictedValue\",\n        value: \"submit\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        name: \"downloadReports\",\n        value: \"Download\",\n        onClick: this.downloadReports,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Report;\n}(Component);\n\nexport { Report as default };","map":{"version":3,"sources":["F:\\restaurantmanagement\\src\\report.js"],"names":["React","Component","Switch","Route","Link","Axios","Report","props","onChange","bind","bindddlData","onSubmit","downloadReports","state","PredictedData","id","predictedValue","data","e","name","target","value","setState","method","url","responseType","then","responce","console","log","catch","err","insertPredictedValue","a","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","x","history","push","ddlValue","map","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Switch, Route, Link } from 'react-router-dom'\r\nimport Axios from 'axios';\r\n\r\nexport default class Report extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.bindddlData = this.bindddlData.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.downloadReports = this.downloadReports.bind(this);\r\n        this.state = {\r\n            PredictedData: {\r\n                id: '',\r\n                predictedValue: ''\r\n            },\r\n            data: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.bindddlData();\r\n    }\r\n    onChange(e) {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n            PredictedData: {\r\n                ...this.state.PredictedData,\r\n                [name]: value,\r\n            }\r\n        })\r\n    }\r\n    bindddlData() {\r\n        Axios({\r\n            method: \"get\",\r\n            url: 'http://localhost:8088/getData',\r\n            responseType: 'json'\r\n        }).then((responce) => {\r\n            console.log(responce);\r\n            this.setState({\r\n                data: responce.data\r\n            })\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    onSubmit() {\r\n        this.insertPredictedValue(this.state.PredictedData);\r\n    }\r\n\r\n    downloadReports() {\r\n        Axios({\r\n            method: \"post\",\r\n            url: 'http://localhost:8088/createReport',\r\n            responseType: 'blob'\r\n        }).then((a) => {\r\n\r\n            // const url = window.URL.createObjectURL(new Blob([a]));\r\n            // const link = document.createElement('a');\r\n            // link.href = url;\r\n            // link.setAttribute('download',\"Reports.pdf\");\r\n            // document.body.appendChild(link);\r\n            // link.click();\r\n            // alert(\"pdf is downloaded\");\r\n\r\n            const url = window.URL.createObjectURL(new Blob([a]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', \"Reports.pdf\");\r\n            document.body.appendChild(link);\r\n            link.click();\r\n\r\n        })\r\n\r\n    }\r\n\r\n    insertPredictedValue(data) {\r\n        Axios({\r\n            method: \"post\",\r\n            url: 'http://localhost:8088/insertPredictedValue',\r\n            data: data,\r\n            responseType: 'json'\r\n        }).then((x) => {\r\n            console.log(x);\r\n            this.props.history.push('/')\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let ddlValue = this.state.data.map((element) => {\r\n            return (\r\n                <option value={element.id}>{element.name}</option>\r\n            )\r\n        })\r\n        return (\r\n            <React.Fragment>\r\n                <Link to='/'>Orders</Link>\r\n                <h1>This is Report Page</h1>\r\n                <select name='id' onChange={this.onChange}>{ddlValue}</select>\r\n                <input type=\"text\" placeholder='Enter Predicted Value' name='predictedValue' onChange={this.onChange} autoComplete='off' />\r\n                <input type=\"button\" name=\"submitPredictedValue\" value='submit' onClick={this.onSubmit} />\r\n                <input type=\"button\" name=\"downloadReports\" value=\"Download\" onClick={this.downloadReports} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}